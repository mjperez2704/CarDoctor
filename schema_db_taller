create table taller_mecanico.almacenes
(
    id        int auto_increment
        primary key,
    clave     varchar(20)                                          not null,
    nombre    varchar(100)                                         not null,
    direccion text                                                 null,
    tipo      enum ('PRINCIPAL', 'SUCURSAL', 'BODEGA', 'TRANSITO') not null,
    constraint clave
        unique (clave)
);

create table taller_mecanico.categorias_producto
(
    id     int auto_increment
        primary key,
    nombre varchar(100)                                                         not null,
    tipo   enum ('EQUIPO', 'REFACCION', 'ACCESORIO', 'HERRAMIENTA', 'SERVICIO') not null
);

create table taller_mecanico.clientes
(
    id             int auto_increment
        primary key,
    tipo_id        int          null comment 'Podr√≠a referenciar una tabla de tipos de cliente',
    razon_social   varchar(255) not null,
    rfc            varchar(13)  null,
    email          varchar(255) null,
    telefono       varchar(20)  null,
    whatsapp       varchar(20)  null,
    direccion      text         null,
    ciudad         varchar(100) null,
    estado         varchar(100) null,
    pais           varchar(100) null,
    cp             varchar(10)  null,
    fecha_registro date         not null,
    constraint rfc
        unique (rfc)
);

create table taller_mecanico.cotizaciones
(
    id         int auto_increment
        primary key,
    folio      varchar(20)                                           not null,
    fecha      date                                                  not null,
    cliente_id int                                                   not null,
    total      decimal(12, 2)                                        null,
    estado     enum ('GENERADA', 'ENVIADA', 'ACEPTADA', 'RECHAZADA') not null,
    constraint folio
        unique (folio),
    constraint cotizaciones_ibfk_1
        foreign key (cliente_id) references taller_mecanico.clientes (id)
);

create index cliente_id
    on taller_mecanico.cotizaciones (cliente_id);

create table taller_mecanico.marcas
(
    id          int auto_increment
        primary key,
    nombre      varchar(100) not null,
    pais_origen varchar(100) null,
    sitio_web   varchar(255) null
);

create table taller_mecanico.modelos
(
    id       int auto_increment
        primary key,
    marca_id int          not null,
    nombre   varchar(100) not null,
    anio     int          null,
    constraint modelos_ibfk_1
        foreign key (marca_id) references taller_mecanico.marcas (id)
            on delete cascade
);

create table taller_mecanico.equipos
(
    id           int auto_increment
        primary key,
    cliente_id   int          not null,
    marca_id     int          null,
    modelo_id    int          null,
    full_name    varchar(255) null,
    imei         varchar(50)  null,
    numero_serie varchar(100) null,
    color        varchar(50)  null,
    accesorios   text         null,
    condicion    text         null,
    constraint imei
        unique (imei),
    constraint numero_serie
        unique (numero_serie),
    constraint equipos_ibfk_1
        foreign key (cliente_id) references taller_mecanico.clientes (id),
    constraint equipos_ibfk_2
        foreign key (marca_id) references taller_mecanico.marcas (id),
    constraint equipos_ibfk_3
        foreign key (modelo_id) references taller_mecanico.modelos (id)
);

create index cliente_id
    on taller_mecanico.equipos (cliente_id);

create index marca_id
    on taller_mecanico.equipos (marca_id);

create index modelo_id
    on taller_mecanico.equipos (modelo_id);

create index marca_id
    on taller_mecanico.modelos (marca_id);

create table taller_mecanico.permisos
(
    id          int auto_increment
        primary key,
    clave       varchar(100) not null comment 'Ej. "usuarios.ver", "ventas.crear"',
    modulo      varchar(50)  not null,
    descripcion text         null,
    constraint clave
        unique (clave)
);

create table taller_mecanico.proveedores
(
    id           int auto_increment
        primary key,
    razon_social varchar(255)  not null,
    rfc          varchar(13)   null,
    email        varchar(255)  null,
    telefono     varchar(20)   null,
    whatsapp     varchar(20)   null,
    direccion    text          null,
    ciudad       varchar(100)  null,
    estado       varchar(100)  null,
    pais         varchar(100)  null,
    cp           varchar(10)   null,
    dias_credito int default 0 null,
    constraint rfc
        unique (rfc)
);

create table taller_mecanico.ordenes_compra
(
    id           int auto_increment
        primary key,
    folio        varchar(20)                                                      not null,
    fecha        date                                                             not null,
    proveedor_id int                                                              not null,
    estado       enum ('BORRADOR', 'ENVIADA', 'PARCIAL', 'RECIBIDA', 'CANCELADA') not null,
    moneda       varchar(3) default 'MXN'                                         null,
    subtotal     decimal(12, 2)                                                   null,
    impuestos    decimal(12, 2)                                                   null,
    total        decimal(12, 2)                                                   null,
    constraint folio
        unique (folio),
    constraint ordenes_compra_ibfk_1
        foreign key (proveedor_id) references taller_mecanico.proveedores (id)
);

create index proveedor_id
    on taller_mecanico.ordenes_compra (proveedor_id);

create table taller_mecanico.productos
(
    id                  int auto_increment
        primary key,
    sku                 varchar(50)                   not null,
    nombre              varchar(255)                  not null,
    descripcion         text                          null,
    categoria_id        int                           not null,
    marca_id            int                           null,
    proveedor_id        int                           null,
    proveedor_alt_id    int                           null,
    clave_proveedor     varchar(50)                   null,
    unidad              varchar(10)                   not null comment 'Ej. PZA, KIT, SRV',
    activo              tinyint(1)     default 1      not null,
    es_servicio         tinyint(1)     default 0      not null,
    es_inventariable    tinyint(1)     default 1      not null,
    es_bloqueado        tinyint(1)     default 0      not null,
    es_parte_kit        tinyint(1)     default 0      not null,
    kit_sku             varchar(50)                   null,
    precio_lista        decimal(10, 2) default 0.00   not null,
    costo_promedio      decimal(10, 4) default 0.0000 not null,
    stock_min           int                           null,
    stock_max           int                           null,
    stock_actual        int            default 0      not null,
    tiempo_entrega_dias int                           null,
    compra_minima       int                           null,
    usa_caducidad       tinyint(1)     default 0      null,
    dias_caducidad      int                           null,
    constraint sku
        unique (sku),
    constraint productos_ibfk_1
        foreign key (categoria_id) references taller_mecanico.categorias_producto (id),
    constraint productos_ibfk_2
        foreign key (marca_id) references taller_mecanico.marcas (id),
    constraint productos_ibfk_3
        foreign key (proveedor_id) references taller_mecanico.proveedores (id),
    constraint productos_ibfk_4
        foreign key (proveedor_alt_id) references taller_mecanico.proveedores (id)
);

create table taller_mecanico.ordenes_compra_detalle
(
    id              int auto_increment
        primary key,
    orden_compra_id int            not null,
    producto_id     int            not null,
    cantidad        int            not null,
    precio_unitario decimal(10, 2) not null,
    constraint ordenes_compra_detalle_ibfk_1
        foreign key (orden_compra_id) references taller_mecanico.ordenes_compra (id),
    constraint ordenes_compra_detalle_ibfk_2
        foreign key (producto_id) references taller_mecanico.productos (id)
);

create index orden_compra_id
    on taller_mecanico.ordenes_compra_detalle (orden_compra_id);

create index producto_id
    on taller_mecanico.ordenes_compra_detalle (producto_id);

create index categoria_id
    on taller_mecanico.productos (categoria_id);

create index marca_id
    on taller_mecanico.productos (marca_id);

create index proveedor_alt_id
    on taller_mecanico.productos (proveedor_alt_id);

create index proveedor_id
    on taller_mecanico.productos (proveedor_id);

create table taller_mecanico.roles
(
    id          int auto_increment
        primary key,
    nombre      varchar(50) not null,
    descripcion text        null,
    constraint nombre
        unique (nombre)
);

create table taller_mecanico.rol_permisos
(
    rol_id     int not null,
    permiso_id int not null,
    primary key (rol_id, permiso_id),
    constraint rol_permisos_ibfk_1
        foreign key (rol_id) references taller_mecanico.roles (id)
            on delete cascade,
    constraint rol_permisos_ibfk_2
        foreign key (permiso_id) references taller_mecanico.permisos (id)
            on delete cascade
);

create index permiso_id
    on taller_mecanico.rol_permisos (permiso_id);

create table taller_mecanico.secciones
(
    id         int auto_increment
        primary key,
    almacen_id int          not null,
    clave      varchar(20)  not null,
    nombre     varchar(100) not null,
    constraint almacen_id
        unique (almacen_id, clave),
    constraint secciones_ibfk_1
        foreign key (almacen_id) references taller_mecanico.almacenes (id)
            on delete cascade
);

create table taller_mecanico.lotes
(
    id              int auto_increment
        primary key,
    producto_id     int         not null,
    almacen_id      int         not null,
    seccion_id      int         not null,
    codigo_lote     varchar(50) not null,
    fecha_caducidad date        null,
    cantidad        int         not null,
    constraint producto_id
        unique (producto_id, almacen_id, seccion_id, codigo_lote),
    constraint lotes_ibfk_1
        foreign key (producto_id) references taller_mecanico.productos (id),
    constraint lotes_ibfk_2
        foreign key (almacen_id) references taller_mecanico.almacenes (id),
    constraint lotes_ibfk_3
        foreign key (seccion_id) references taller_mecanico.secciones (id)
);

create index almacen_id
    on taller_mecanico.lotes (almacen_id);

create index seccion_id
    on taller_mecanico.lotes (seccion_id);

create table taller_mecanico.usuarios
(
    id            int auto_increment
        primary key,
    username      varchar(50)                            not null,
    email         varchar(255)                           not null,
    telefono      varchar(20)                            null,
    password_hash varchar(255)                           not null,
    nombre        varchar(100)                           not null,
    apellido_p    varchar(100)                           null,
    apellido_m    varchar(100)                           null,
    avatar_url    varchar(255)                           null,
    activo        tinyint(1) default 1                   not null,
    ultimo_acceso datetime                               null,
    created_at    timestamp  default current_timestamp() not null,
    updated_at    timestamp  default current_timestamp() not null on update current_timestamp(),
    deleted_at    datetime                               null,
    constraint email
        unique (email),
    constraint username
        unique (username)
);

create table taller_mecanico.bitacora
(
    id            int auto_increment
        primary key,
    fecha         timestamp default current_timestamp() not null,
    usuario_id    int                                   null,
    accion        varchar(100)                          null,
    descripcion   text                                  null,
    referencia_id int                                   null,
    modulo        varchar(50)                           null,
    constraint bitacora_ibfk_1
        foreign key (usuario_id) references taller_mecanico.usuarios (id)
);

create index usuario_id
    on taller_mecanico.bitacora (usuario_id);

create table taller_mecanico.empleados
(
    id                 int auto_increment
        primary key,
    codigo             varchar(20)          null,
    nombre             varchar(100)         not null,
    apellido_p         varchar(100)         not null,
    apellido_m         varchar(100)         null,
    curp               varchar(18)          null,
    rfc                varchar(13)          null,
    nss                varchar(11)          null,
    email              varchar(255)         null,
    telefono           varchar(20)          null,
    puesto             varchar(100)         null,
    fecha_ingreso      date                 null,
    fecha_baja         date                 null,
    salario_diario     decimal(10, 2)       null,
    activo             tinyint(1) default 1 not null,
    usuario_id         int                  null,
    slug_vendedor      varchar(10)          null,
    meta_venta_mensual decimal(12, 2)       null,
    constraint codigo
        unique (codigo),
    constraint curp
        unique (curp),
    constraint email
        unique (email),
    constraint nss
        unique (nss),
    constraint rfc
        unique (rfc),
    constraint slug_vendedor
        unique (slug_vendedor),
    constraint usuario_id
        unique (usuario_id),
    constraint empleados_ibfk_1
        foreign key (usuario_id) references taller_mecanico.usuarios (id)
);

create table taller_mecanico.gastos
(
    id          int auto_increment
        primary key,
    fecha       date                                        not null,
    categoria   varchar(100)                                not null,
    descripcion text                                        null,
    monto       decimal(10, 2)                              not null,
    empleado_id int                                         not null,
    autoriza_id int                                         null,
    estado      enum ('PENDIENTE', 'APROBADO', 'RECHAZADO') not null,
    constraint gastos_ibfk_1
        foreign key (empleado_id) references taller_mecanico.empleados (id),
    constraint gastos_ibfk_2
        foreign key (autoriza_id) references taller_mecanico.empleados (id)
);

create index autoriza_id
    on taller_mecanico.gastos (autoriza_id);

create index empleado_id
    on taller_mecanico.gastos (empleado_id);

create table taller_mecanico.herramientas
(
    id                     int auto_increment
        primary key,
    sku                    varchar(50)                                                    not null,
    nombre                 varchar(255)                                                   not null,
    descripcion            text                                                           null,
    marca                  varchar(100)                                                   null,
    modelo                 varchar(100)                                                   null,
    numero_serie           varchar(100)                                                   null,
    estado                 enum ('DISPONIBLE', 'ASIGNADA', 'EN_MANTENIMIENTO', 'DE_BAJA') not null,
    asignada_a_empleado_id int                                                            null,
    fecha_compra           date                                                           null,
    costo                  decimal(10, 2)                                                 null,
    constraint numero_serie
        unique (numero_serie),
    constraint sku
        unique (sku),
    constraint herramientas_ibfk_1
        foreign key (asignada_a_empleado_id) references taller_mecanico.empleados (id)
);

create index asignada_a_empleado_id
    on taller_mecanico.herramientas (asignada_a_empleado_id);

create table taller_mecanico.movimientos_inventario
(
    id          int auto_increment
        primary key,
    fecha       timestamp default current_timestamp()                                                                   not null,
    tipo        enum ('ENTRADA', 'SALIDA', 'AJUSTE_POSITIVO', 'AJUSTE_NEGATIVO', 'TRASLADO_SALIDA', 'TRASLADO_ENTRADA') null,
    referencia  varchar(50)                                                                                             null comment 'Folio de OC, Venta, Ajuste, etc.',
    producto_id int                                                                                                     not null,
    lote_id     int                                                                                                     null,
    almacen_id  int                                                                                                     not null,
    cantidad    int                                                                                                     not null,
    costo_unit  decimal(10, 4)                                                                                          null,
    usuario_id  int                                                                                                     null,
    constraint movimientos_inventario_ibfk_1
        foreign key (producto_id) references taller_mecanico.productos (id),
    constraint movimientos_inventario_ibfk_2
        foreign key (lote_id) references taller_mecanico.lotes (id),
    constraint movimientos_inventario_ibfk_3
        foreign key (almacen_id) references taller_mecanico.almacenes (id),
    constraint movimientos_inventario_ibfk_4
        foreign key (usuario_id) references taller_mecanico.usuarios (id)
);

create index almacen_id
    on taller_mecanico.movimientos_inventario (almacen_id);

create index lote_id
    on taller_mecanico.movimientos_inventario (lote_id);

create index producto_id
    on taller_mecanico.movimientos_inventario (producto_id);

create index usuario_id
    on taller_mecanico.movimientos_inventario (usuario_id);

create table taller_mecanico.ordenes_servicio
(
    id              int auto_increment
        primary key,
    folio           varchar(20)                                                                                                      not null,
    fecha           datetime                                                                                                         not null,
    cliente_id      int                                                                                                              not null,
    equipo_id       int                                                                                                              null,
    diagnostico_ini text                                                                                                             null,
    estado          enum ('RECEPCION', 'DIAGNOSTICO', 'AUTORIZACION', 'EN_REPARACION', 'PRUEBAS', 'LISTO', 'ENTREGADO', 'CANCELADO') null,
    tecnico_id      int                                                                                                              null,
    vehiculo_id     int(10)                                                                                                          null,
    constraint folio
        unique (folio),
    constraint ordenes_servicio_ibfk_1
        foreign key (cliente_id) references taller_mecanico.clientes (id),
    constraint ordenes_servicio_ibfk_2
        foreign key (equipo_id) references taller_mecanico.equipos (id),
    constraint ordenes_servicio_ibfk_3
        foreign key (tecnico_id) references taller_mecanico.empleados (id)
);

create index cliente_id
    on taller_mecanico.ordenes_servicio (cliente_id);

create index equipo_id
    on taller_mecanico.ordenes_servicio (equipo_id);

create index tecnico_id
    on taller_mecanico.ordenes_servicio (tecnico_id);

create table taller_mecanico.solicitudes_internas
(
    id              int auto_increment
        primary key,
    folio           varchar(20)                                               not null,
    solicitante_id  int                                                       not null,
    aprobador_id    int                                                       null,
    fecha_solicitud date                                                      not null,
    fecha_respuesta date                                                      null,
    tipo            enum ('COMPRA', 'GASTO', 'VACACIONES', 'PERMISO', 'OTRO') not null,
    descripcion     text                                                      null,
    estado          enum ('PENDIENTE', 'APROBADA', 'RECHAZADA', 'CANCELADA')  not null,
    monto           decimal(10, 2)                                            null,
    comentarios     text                                                      null,
    constraint folio
        unique (folio),
    constraint solicitudes_internas_ibfk_1
        foreign key (solicitante_id) references taller_mecanico.empleados (id),
    constraint solicitudes_internas_ibfk_2
        foreign key (aprobador_id) references taller_mecanico.empleados (id)
);

create index aprobador_id
    on taller_mecanico.solicitudes_internas (aprobador_id);

create index solicitante_id
    on taller_mecanico.solicitudes_internas (solicitante_id);

create table taller_mecanico.usuario_roles
(
    usuario_id int not null,
    rol_id     int not null,
    primary key (usuario_id, rol_id),
    constraint usuario_roles_ibfk_1
        foreign key (usuario_id) references taller_mecanico.usuarios (id)
            on delete cascade,
    constraint usuario_roles_ibfk_2
        foreign key (rol_id) references taller_mecanico.roles (id)
            on delete cascade
);

create index rol_id
    on taller_mecanico.usuario_roles (rol_id);

create table taller_mecanico.vehiculos
(
    id                int auto_increment
        primary key,
    cliente_id        int          not null,
    marca_id          int          null,
    modelo_id         int          null,
    version_id        int          null,
    anio              int          null,
    placas            varchar(15)  null,
    vin               varchar(17)  null comment 'Vehicle Identification Number',
    motor             varchar(100) null,
    color             varchar(50)  null,
    condicion_ingreso text         null comment 'Descripci√≥n de da√±os o estado a la recepci√≥n',
    imagen_url        varchar(255) null,
    constraint placas
        unique (placas),
    constraint vin
        unique (vin)
);

